{"version":3,"sources":["Word.js","app2.js","reportWebVitals.js","index.js"],"names":["Word","r_seq","r_word","r_link","r_chi","r_des","r_pos","className","href","target","rel","App","props","state","loading","words","fetch","then","res","json","result","console","log","setState","this","style","position","left","top","transform","fontSize","display","flexWrap","justifyContent","alignItems","width","margin","textAlign","map","word","_id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAWeA,MATf,YAA+D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACjD,OACI,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,OAAf,UAAsB,oBAAGC,KAAML,EAAQM,OAAO,SAASC,IAAI,aAArC,UAAmDR,EAAO,8BAAMD,GAAgB,KAAhF,IAA2FG,KAAjH,IAA6HE,KAC7H,mBAAGC,UAAU,cAAb,SAA4BF,QCsKzBM,E,kDAhEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,EACTC,MAAO,IAJQ,E,qDAQnB,WAAqB,IAAD,OAClBC,MAAM,kEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAQL,EAAUK,EAAVL,MACRM,QAAQC,IAAIP,GACZ,EAAKQ,SAAS,CAAET,SAAS,EAAOC,e,oBAItC,WACE,MAA2BS,KAAKX,MAAxBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAiBjB,OAAID,EAEA,qBAAKW,MATY,CACnBC,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,wBACXC,SAAU,QAIR,SACE,+CAKF,qBAAKL,MAxBK,CACZM,QAAS,OACTC,SAAU,OACVC,eAAgB,SAChBC,WAAY,SACZC,MAAO,MACPC,OAAQ,aACRC,UAAW,UAiBT,SACGtB,EAAMuB,KAAI,SAAAC,GACT,OACE,cAAC,EAAD,CAEEtC,MAAOsC,EAAKtC,MACZC,OAAQqC,EAAKrC,OACbC,OAAQoC,EAAKpC,OACbC,MAAOmC,EAAKnC,MACZC,MAAOkC,EAAKlC,MACZC,MAAOiC,EAAKjC,OANPiC,EAAKC,c,GA/GRC,aCjCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAIFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6cd19779.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Word({ r_seq, r_word, r_link, r_chi, r_des, r_pos }) {\n    return (\n        <div className=\"item\">\n            <div className=\"word\"><a href={r_link} target=\"_blank\" rel=\"noreferrer\">{r_word}<sup>{r_seq ? r_seq : \"\"}</sup> {r_chi}</a> {r_pos}</div>\n            <p className=\"description\">{r_des}</p>\n        </div>\n    )\n}\n\nexport default Word;\n","// import Person from './Person';\r\n// import Todo from \"./Todo\";\r\n// import Book from \"./Book\";\r\n// import NameTag from \"./NameTag\";\r\n// import Counter from \"./Counter\"\r\n// import YoutubeVideo from './YoutubeVideo';\r\n// import dummyData from './DummyData';\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport Word from './Word';\r\n// import Movie from './Movie';\r\n// import words from './kor_dic_coll.json'\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <>\r\n\r\n//         <div id=\"search-box\">\r\n//           <input id=\"search\" type=\"text\" value=\"\" placeholder=\"단어를 검색하세요..\"></input>\r\n//           <input id=\"submit\" type=\"submit\" value=\"search\"></input>\r\n//           <input id=\"btn\" type=\"button\" onclick=\"location.href='/'\" value=\"Reset\"></input>\r\n//           <p></p>\r\n//           <hr></hr>\r\n//         </div>\r\n//       </>\r\n//       {words.map(word => {\r\n//         return (\r\n//           <>\r\n//             <div class=\"item\">\r\n//               <div class=\"word\">\r\n//                 <a href={word.r_link} target=\"_blank\" rel=\"noreferrer\">\r\n//                   {word.r_word}<sup>{word.r_seq ? word.r_seq : \"\"}\r\n//                   </sup> {word.r_chi}</a> - {word.r_pos}</div>\r\n//               <p class=\"description\">{word.r_des}</p>\r\n//             </div>\r\n//             <hr></hr>\r\n//           </>\r\n//         )\r\n//       }\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nclass App extends Component {\r\n  // constructor(props) {\r\n  //   super(props)\r\n  //   this.state = {\r\n  //     loading: true,\r\n  //     movies: []\r\n  //   }\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   fetch('https://yts.mx/api/v2/list_movies.json?limit=12')\r\n  //     .then(res => res.json())\r\n  //     .then(result => {\r\n  //       const { data: { movies } } = result\r\n  //       console.log(movies)\r\n  //       this.setState({ loading: false, movies })\r\n  //     })\r\n  // }\r\n\r\n  // render() {\r\n  //   const { loading, movies } = this.state\r\n  //   const style = {\r\n  //     display: 'flex',\r\n  //     flexWrap: 'wrap',\r\n  //     justifyContent: 'center',\r\n  //     alignItems: 'center',\r\n  //     width: '60%',\r\n  //     margin: '100px auto',\r\n  //     textAlign: 'center'\r\n  //   }\r\n  //   const loadingStyle = {\r\n  //     position: 'absolute',\r\n  //     left: '50%',\r\n  //     top: '50%',\r\n  //     transform: 'translate(-50%, -50%)',\r\n  //     fontSize: '2rem'\r\n  //   }\r\n  //   if (loading) {\r\n  //     return (\r\n  //       <div style={loadingStyle}>\r\n  //         <h1>Loading ...</h1>\r\n  //       </div>\r\n  //     )\r\n  //   } else {\r\n  //     return (\r\n  //       <div style={style}>\r\n  //         {movies.map(movie => {\r\n  //           return (\r\n  //             <Movie\r\n  //               key={movie.id}\r\n  //               title={movie.title}\r\n  //               genres={movie.genres}\r\n  //               cover={movie.medium_cover_image}\r\n  //               summary={movie.summary}\r\n  //             ></Movie>\r\n  //           )\r\n  //         })}\r\n  //       </div>\r\n  //     )\r\n  //   }\r\n  // }\r\n\r\n  //생성자 함수 생성\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      words: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://dictionary-search-leeyu2523434.herokuapp.com/api/words')\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        const { words } = result\r\n        console.log(words)\r\n        this.setState({ loading: false, words })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { loading, words } = this.state\r\n    const style = {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: '60%',\r\n      margin: '100px auto',\r\n      textAlign: 'center'\r\n    }\r\n    const loadingStyle = {\r\n      position: 'absolute',\r\n      left: '50%',\r\n      top: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      fontSize: '2rem'\r\n    }\r\n    if (loading) {\r\n      return (\r\n        <div style={loadingStyle}>\r\n          <h1>Loading ...</h1>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div style={style}>\r\n          {words.map(word => {\r\n            return (\r\n              <Word\r\n                key={word._id}\r\n                r_seq={word.r_seq}\r\n                r_word={word.r_word}\r\n                r_link={word.r_link}\r\n                r_chi={word.r_chi}\r\n                r_des={word.r_des}\r\n                r_pos={word.r_pos}\r\n              ></Word>\r\n            )\r\n          })}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\nexport default App;\r\n\r\n// {dummyData.map(d => {\r\n//   return (\r\n//     <YoutubeVideo\r\n//       key={d.videoId}\r\n//       videoId={d.videoId}\r\n//       videoName={d.videoName}\r\n//       videoLength={d.videoLength}\r\n//       videoDescription={d.videoDescription}\r\n//       videoAuthor={d.videoAuthor}>\r\n//       {/* 컨텐츠 삽입 */}\r\n//       <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/kK9oLiI1ZV0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n//     </YoutubeVideo>\r\n//   )\r\n// }\r\n// )}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App2 from './app2';\n// import App3 from './App3';\n// import App4 from './App4';\n// import App5 from './App5';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <App2 />\n    {/* <App3 /> */}\n    {/* <App4/> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}